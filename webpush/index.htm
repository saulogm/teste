<!DOCTYPE html>
<header>
<meta charset="ISO-8859-1">
<script>
if ('serviceWorker' in navigator) {
	registerServiceWorker();
}

if (('PushManager' in window)) {
	window.addEventListener('load', function() {
	updateBtn();
})
};

function updateBtn(){
	navigator.serviceWorker.register('sw.js').then(function(reg) {
		reg.pushManager.getSubscription().then(function(subscription) {
			var pushButton = document.querySelector('.js-push-button');
			if (Notification.permission==="blocked"){
				pushButton.innerText = "Desabilitado";
				pushButton.disabled = true;
			} else if (Notification.permission!="granted" || subscription==null){
				pushButton.innerText = "Habilitar";
				pushButton.onclick	= function() { askPermission()};
			} else {
				pushButton.innerText = "Desabilitar";
				pushButton.onclick = function() { unregisterNotification()};
				document.querySelector("#teste").innerHTML = JSON.stringify(subscription);
			};
		})
	})
}

function unregisterNotification() {
	navigator.serviceWorker.ready.then(function(reg) {
		reg.pushManager.getSubscription().then(function(subscription) {
			subscription.unsubscribe().then(function(successful) {
			console.log("unsubscribed");
			updateBtn();
			}).catch(function(e) {
			console.log("Something went wrong");
			})
		})
	});
}

function registerServiceWorker() {
	return navigator.serviceWorker.register('sw.js')
	.then(function(registration) {
		registration.update();
		console.log('Service worker successfully registered.');
		return registration;
	})
	.catch(function(err) {
		console.error('Unable to register service worker.', err);
	});
}

function askPermission() {
	return new Promise(function(resolve, reject) {
		const permissionResult = Notification.requestPermission(function(result) {
		resolve(result);
		});

		if (permissionResult) {
		permissionResult.then(resolve, reject);
		}
	})
	.then(function(permissionResult) {
		if (permissionResult !== 'granted') {
		throw new Error('We weren\'t granted permission.');
		} else {
			subscribeUserToPush();
		}
	});
}

function subscribeUserToPush() {
	return navigator.serviceWorker.register('sw.js')
	.then(function(registration) {
		const subscribeOptions = {
		userVisibleOnly: true,
		applicationServerKey: urlBase64ToUint8Array(
			'BPn4YDZNWF6hTS3afic3aTySDqxubjTGudWhDHQCAKzhGw3tutdUFV5fRympYs4HnD3kuPQZ2ReEdlO4_8rtnkI'
		)
		};
		return registration.pushManager.subscribe(subscribeOptions);
	})
	.then(function(pushSubscription) {
		console.log('Received PushSubscription: ', JSON.stringify(pushSubscription));
		updateBtn();
		// sendSubscriptionToBackEnd(pushSubscription);
		return pushSubscription;
	});
}

function sendSubscriptionToBackEnd(subscription) {
	return fetch('/h_grvpush.apw', {
	method: 'POST',
	headers: {
	'Content-Type': 'application/json'
	},
	body: JSON.stringify(subscription)
})
.then(function(response) {
	if (!response.ok) {
	throw new Error('Bad status code from server.');
	}
	return response.json();
}).catch(function(error) {
	console.log('Problema fetch operation: ' + error.message);
});
}

// Web-Push
// Public base64 to Uint
function urlBase64ToUint8Array(base64String) {
	var padding = '='.repeat((4 - base64String.length % 4) % 4);
	var base64 = (base64String + padding)
		.replace(/\-/g, '+')
		.replace(/_/g, '/');

	var rawData = window.atob(base64);
	var outputArray = new Uint8Array(rawData.length);

	for (var i = 0; i < rawData.length; ++i) {
		outputArray[i] = rawData.charCodeAt(i);
	}
	return outputArray;
}
async function start() {
	const ndef = new NDEFReader();
	await ndef.scan();
	ndef.onreading = async (event) => {
	const decoder = new TextDecoder();
	for (const record of event.message.records) {
		console.log("Record type:  " + record.recordType);
		console.log("MIME type:    " + record.mediaType);
		console.log("=== data ===\n" + decoder.decode(record.data));
	}
	};
}
function setcartao(cCartao){
	document.querySelector("#cCartao").value=cCartao;
}
</script>

</header>
<body>
Notifica&ccedil;&atilde;o: 
<button id="botao" class="js-push-button">
	Habilitar
</button><br>
Cartao:
<input type="text" id="cCartao" value=""/>
<div id="teste">
<div>
</body>
</html>